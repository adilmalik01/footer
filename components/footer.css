
*,
::before,
::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	   tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	-webkit-text-decoration: underline dotted;
	        text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select { /* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
	border-style: none;
	padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
	outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/



/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}


/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #a1a1aa;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #a1a1aa;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #a1a1aa;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	--tw-border-opacity: 1;
	border-color: rgba(228, 228, 231, var(--tw-border-opacity));
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
}
.a,
.b,
.c,
.d,
.e,
.f,
.g,
.h,
.i,
.j,
.k,
.l,
.m,
.n,
.o,
.p {
	position: relative;
	padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
}
.a > *,
.b > *,
.c > *,
.d > *,
.e > *,
.f > *,
.g > *,
.h > *,
.i > *,
.j > *,
.k > *,
.l > *,
.m > *,
.n > *,
.o > *,
.p > * {
	position: absolute;
	height: 100%;
	width: 100%;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}
.c {
	--tw-aspect-w: 3;
}
.q {
	--tw-aspect-h: 4;
}
.r {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}
.s {
	pointer-events: none;
}
.t {
	position: absolute;
}
.u {
	position: relative;
}
.v {
	top: 0px;
	right: 0px;
	bottom: 0px;
	left: 0px;
}
.w {
	top: 0px;
	bottom: 0px;
}
.x {
	left: 0px;
	right: 0px;
}
.y {
	left: 0px;
}
.z {
	bottom: 0px;
}
.ab {
	left: 50%;
}
.bb {
	top: -1rem;
}
.cb {
	left: -3rem;
}
.db {
	bottom: -2.5rem;
}
.eb {
	left: -4rem;
}
.fb {
	top: -4rem;
}
.gb {
	top: 1.5rem;
}
.hb {
	right: -1rem;
}
.ib {
	bottom: -3rem;
}
.jb {
	right: -3rem;
}
.kb {
	grid-column: span 2 / span 2;
}
.lb {
	margin-left: auto;
	margin-right: auto;
}
.mb {
	margin-top: -2.25rem;
	margin-bottom: -2.25rem;
}
.nb {
	margin-right: -1.5rem;
}
.ob {
	margin-left: -1.5rem;
}
.pb {
	margin-top: 2rem;
}
.qb {
	margin-top: 1.5rem;
}
.rb {
	margin-right: 0.5rem;
}
.sb {
	margin-left: -0.25rem;
}
.tb {
	margin-top: 1rem;
}
.ub {
	margin-top: 3rem;
}
.vb {
	margin-left: 0.75rem;
}
.wb {
	margin-right: -0.25rem;
}
.xb {
	margin-left: 0.5rem;
}
.yb {
	margin-top: 1.25rem;
}
.zb {
	margin-bottom: -12rem;
}
.ac {
	margin-bottom: -15rem;
}
.bc {
	margin-top: 0.25rem;
}
.cc {
	margin-top: 2.5rem;
}
.dc {
	margin-top: 0.5rem;
}
.ec {
	margin-left: 1rem;
}
.fc {
	margin-top: 0.375rem;
}
.gc {
	margin-top: 2.25rem;
}
.hc {
	margin-top: 0.75rem;
}
.ic {
	margin-bottom: 2.5rem;
}
.jc {
	margin-left: auto;
}
.kc {
	margin-left: 2rem;
}
.lc {
	margin-bottom: 3rem;
}
.mc {
	margin-bottom: -4rem;
}
.nc {
	margin-left: 1.25rem;
}
.oc {
	margin-top: 1.75rem;
}
.pc {
	margin-top: 4rem;
}
.qc {
	margin-bottom: 1.25rem;
}
.rc {
	margin-top: 5rem;
}
.sc {
	display: block;
}
.tc {
	display: flex;
}
.uc {
	display: inline-flex;
}
.vc {
	display: flow-root;
}
.wc {
	display: grid;
}
.xc {
	display: none;
}
.yc {
	height: 5rem;
}
.zc {
	height: 100%;
}
.bd {
	height: 7rem;
}
.cd {
	height: 1.25rem;
}
.dd {
	height: 3.5rem;
}
.ed {
	height: 460px;
}
.fd {
	height: 4rem;
}
.gd {
	height: 1.5rem;
}
.hd {
	height: 1.75rem;
}
.id {
	height: 2rem;
}
.jd {
	height: 3rem;
}
.kd {
	height: 8rem;
}
.ld {
	height: 2.25rem;
}
.md {
	height: 1rem;
}
.nd {
	height: 1px;
}
.od {
	width: 5rem;
}
.pd {
	width: 100%;
}
.qd {
	width: 7rem;
}
.rd {
	width: 1.25rem;
}
.sd {
	width: auto;
}
.td {
	width: 460px;
}
.ud {
	width: 4rem;
}
.vd {
	width: 3.5rem;
}
.wd {
	width: 1.5rem;
}
.xd {
	width: 1.75rem;
}
.yd {
	width: 2rem;
}
.zd {
	width: 3rem;
}
.ae {
	width: 8rem;
}
.be {
	width: 2.25rem;
}
.ce {
	width: 1rem;
}
.de {
	min-width: 0px;
}
.ee {
	max-width: 80rem;
}
.fe {
	max-width: 42rem;
}
.ge {
	max-width: 36rem;
}
.he {
	max-width: 64rem;
}
.ie {
	max-width: 20rem;
}
.je {
	max-width: 48rem;
}
.ke {
	max-width: 72rem;
}
.le {
	max-width: 32rem;
}
.me {
	flex: 1 1 0%;
}
.ne {
	flex-shrink: 0;
}
.oe {
	transform-origin: top;
}
.pe {
	transform-origin: bottom right;
}
.qe {
	--tw-translate-x: -50%;
	transform: var(--tw-transform);
}
.re {
	--tw-rotate: 180deg;
	transform: var(--tw-transform);
}
.se {
	--tw-scale-x: 1.5;
	--tw-scale-y: 1.5;
	transform: var(--tw-transform);
}
.te {
	--tw-scale-x: .75;
	--tw-scale-y: .75;
	transform: var(--tw-transform);
}
.ue {
	cursor: pointer;
}
.ve {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}
.we {
	grid-template-columns: repeat(2, minmax(0, 1fr));
}
.xe {
	flex-direction: row;
}
.ye {
	flex-direction: column;
}
.ze {
	flex-wrap: wrap;
}
.af {
	place-items: center;
}
.bf {
	align-items: flex-start;
}
.cf {
	align-items: center;
}
.df {
	align-items: stretch;
}
.ef {
	justify-content: flex-start;
}
.ff {
	justify-content: center;
}
.gf {
	justify-content: space-between;
}
.hf {
	gap: 1.5rem;
}
.if {
	gap: 1.25rem;
}
.jf {
	gap: 3rem;
}
.kf {
	row-gap: 2rem;
}
.lf {
	-moz-column-gap: 2.5rem;
	     column-gap: 2.5rem;
}
.mf {
	row-gap: 1rem;
}
.nf {
	row-gap: 3rem;
}
.of {
	row-gap: 2.5rem;
}
.pf {
	row-gap: 4rem;
}
.qf {
	-moz-column-gap: 5rem;
	     column-gap: 5rem;
}
.rf {
	row-gap: 1.5rem;
}
.sf {
	-moz-column-gap: 1rem;
	     column-gap: 1rem;
}
.tf {
	-moz-column-gap: 3rem;
	     column-gap: 3rem;
}
.uf {
	-moz-column-gap: 2rem;
	     column-gap: 2rem;
}
.vf {
	row-gap: 0.75rem;
}
.wf {
	-moz-column-gap: 1.25rem;
	     column-gap: 1.25rem;
}
.xf > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.yf > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(1rem * var(--tw-space-x-reverse));
	margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.zf > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}
.ag > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(0.75rem * var(--tw-space-x-reverse));
	margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.bg > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(2rem * var(--tw-space-x-reverse));
	margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}
.cg > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}
.dg > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
	border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.eg {
	overflow: hidden;
}
.fg {
	border-radius: 9999px;
}
.gg {
	border-radius: 0.375rem;
}
.hg {
	border-radius: 0.75rem;
}
.ig {
	border-radius: 0.5rem;
}
.jg {
	border-width: 8px;
}
.kg {
	border-width: 1px;
}
.lg {
	border-width: 2px;
}
.mg {
	border-bottom-width: 8px;
}
.ng {
	--tw-border-opacity: 1;
	border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}
.og {
	--tw-border-opacity: 1;
	border-color: rgba(252, 211, 77, var(--tw-border-opacity));
}
.pg {
	border-color: transparent;
}
.qg {
	--tw-border-opacity: 1;
	border-color: rgba(228, 228, 231, var(--tw-border-opacity));
}
.rg {
	--tw-border-opacity: 1;
	border-color: rgba(0, 0, 0, var(--tw-border-opacity));
}
.sg {
	--tw-border-opacity: 1;
	border-color: rgba(39, 39, 42, var(--tw-border-opacity));
}
.tg {
	--tw-border-opacity: 1;
	border-color: rgba(63, 63, 70, var(--tw-border-opacity));
}
.ug {
	--tw-border-opacity: 1;
	border-color: rgba(212, 212, 216, var(--tw-border-opacity));
}
.vg {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.wg {
	--tw-bg-opacity: 1;
	background-color: rgba(212, 212, 216, var(--tw-bg-opacity));
}
.xg {
	--tw-bg-opacity: 1;
	background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}
.yg {
	--tw-bg-opacity: 1;
	background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}
.zg {
	--tw-bg-opacity: 1;
	background-color: rgba(79, 70, 229, var(--tw-bg-opacity));
}
.ah {
	--tw-bg-opacity: 1;
	background-color: rgba(252, 211, 77, var(--tw-bg-opacity));
}
.bh {
	--tw-bg-opacity: 1;
	background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.ch {
	background-color: rgba(0, 0, 0, 0.6);
}
.dh {
	background-color: transparent;
}
.eh {
	--tw-bg-opacity: 1;
	background-color: rgba(251, 191, 36, var(--tw-bg-opacity));
}
.fh {
	--tw-bg-opacity: 1;
	background-color: rgba(250, 250, 250, var(--tw-bg-opacity));
}
.gh {
	--tw-bg-opacity: 1;
	background-color: rgba(24, 24, 27, var(--tw-bg-opacity));
}
.hh {
	--tw-bg-opacity: 1;
	background-color: rgba(63, 63, 70, var(--tw-bg-opacity));
}
.ih {
	--tw-bg-opacity: 1;
	background-color: rgba(39, 39, 42, var(--tw-bg-opacity));
}
.jh {
	--tw-bg-opacity: 1;
	background-color: rgba(219, 234, 254, var(--tw-bg-opacity));
}
.kh {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 237, 213, var(--tw-bg-opacity));
}
.lh {
	--tw-bg-opacity: 1;
	background-color: rgba(209, 250, 229, var(--tw-bg-opacity));
}
.mh {
	--tw-bg-opacity: 1;
	background-color: rgba(254, 226, 226, var(--tw-bg-opacity));
}
.nh {
	background-color: rgba(250, 250, 250, 0.2);
}
.oh {
	--tw-bg-opacity: 1;
	background-color: rgba(30, 58, 138, var(--tw-bg-opacity));
}
.ph {
	background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.qh {
	--tw-gradient-from: #c026d3;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(192, 38, 211, 0));
}
.rh {
	--tw-gradient-from: #000;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));
}
.sh {
	--tw-gradient-to: #2563eb;
}
.th {
	--tw-gradient-to: transparent;
}
.uh {
	-webkit-background-clip: text;
	        background-clip: text;
}
.vh {
	-o-object-fit: cover;
	   object-fit: cover;
}
.wh {
	-o-object-position: top;
	   object-position: top;
}
.xh {
	-o-object-position: bottom;
	   object-position: bottom;
}
.yh {
	padding: 2rem;
}
.zh {
	padding: 1rem;
}
.ai {
	padding-top: 2.5rem;
	padding-bottom: 2.5rem;
}
.bi {
	padding-left: 1rem;
	padding-right: 1rem;
}
.ci {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
.di {
	padding-left: 2rem;
	padding-right: 2rem;
}
.ei {
	padding-left: 2.5rem;
	padding-right: 2.5rem;
}
.fi {
	padding-left: 4rem;
	padding-right: 4rem;
}
.gi {
	padding-left: 3rem;
	padding-right: 3rem;
}
.hi {
	padding-top: 1.25rem;
	padding-bottom: 1.25rem;
}
.ii {
	padding-top: 2.25rem;
	padding-bottom: 2.25rem;
}
.ji {
	padding-left: 1.25rem;
	padding-right: 1.25rem;
}
.ki {
	padding-top: 0.75rem;
	padding-bottom: 0.75rem;
}
.li {
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}
.mi {
	padding-top: 0.375rem;
	padding-bottom: 0.375rem;
}
.ni {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}
.oi {
	padding-left: 2.25rem;
	padding-right: 2.25rem;
}
.pi {
	padding-top: 2rem;
	padding-bottom: 2rem;
}
.qi {
	padding-top: 3rem;
	padding-bottom: 3rem;
}
.ri {
	padding-left: 0.75rem;
}
.si {
	padding-left: 2.5rem;
}
.ti {
	padding-right: 1rem;
}
.ui {
	padding-top: 2.5rem;
}
.vi {
	padding-bottom: 1.25rem;
}
.wi {
	padding-left: 5rem;
}
.xi {
	padding-right: 1.5rem;
}
.yi {
	padding-left: 4rem;
}
.zi {
	padding-right: 2.5rem;
}
.aj {
	padding-left: 1rem;
}
.bj {
	padding-right: 3rem;
}
.cj {
	text-align: left;
}
.dj {
	text-align: center;
}
.ej {
	font-size: 1.875rem;
	line-height: 2.25rem;
}
.fj {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.gj {
	font-size: 1rem;
	line-height: 1.5rem;
}
.hj {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.ij {
	font-size: 2.25rem;
	line-height: 2.5rem;
}
.jj {
	font-size: 1.5rem;
	line-height: 2rem;
}
.kj {
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.lj {
	font-size: 0.75rem;
	line-height: 1rem;
}
.mj {
	font-weight: 700;
}
.nj {
	font-weight: 600;
}
.oj {
	font-weight: 500;
}
.pj {
	text-transform: uppercase;
}
.qj {
	line-height: 1.25;
}
.rj {
	line-height: 1.625;
}
.sj {
	line-height: 1.375;
}
.tj {
	letter-spacing: 0.1em;
}
.uj {
	--tw-text-opacity: 1;
	color: rgba(0, 0, 0, var(--tw-text-opacity));
}
.vj {
	--tw-text-opacity: 1;
	color: rgba(82, 82, 91, var(--tw-text-opacity));
}
.wj {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.xj {
	--tw-text-opacity: 1;
	color: rgba(24, 24, 27, var(--tw-text-opacity));
}
.yj {
	--tw-text-opacity: 1;
	color: rgba(228, 228, 231, var(--tw-text-opacity));
}
.zj {
	--tw-text-opacity: 1;
	color: rgba(161, 161, 170, var(--tw-text-opacity));
}
.ak {
	--tw-text-opacity: 1;
	color: rgba(16, 185, 129, var(--tw-text-opacity));
}
.bk {
	--tw-text-opacity: 1;
	color: rgba(37, 99, 235, var(--tw-text-opacity));
}
.ck {
	--tw-text-opacity: 1;
	color: rgba(250, 250, 250, var(--tw-text-opacity));
}
.dk {
	--tw-text-opacity: 1;
	color: rgba(252, 211, 77, var(--tw-text-opacity));
}
.ek {
	--tw-text-opacity: 1;
	color: rgba(63, 63, 70, var(--tw-text-opacity));
}
.fk {
	--tw-text-opacity: 1;
	color: rgba(251, 146, 60, var(--tw-text-opacity));
}
.gk {
	--tw-text-opacity: 1;
	color: rgba(212, 212, 216, var(--tw-text-opacity));
}
.hk {
	--tw-text-opacity: 1;
	color: rgba(120, 53, 15, var(--tw-text-opacity));
}
.ik {
	--tw-text-opacity: 1;
	color: rgba(244, 244, 245, var(--tw-text-opacity));
}
.jk {
	--tw-text-opacity: 1;
	color: rgba(192, 38, 211, var(--tw-text-opacity));
}
.kk {
	color: transparent;
}
.lk {
	color: rgba(255, 255, 255, 0.5);
}
.mk {
	--tw-text-opacity: 1;
	color: rgba(239, 68, 68, var(--tw-text-opacity));
}
.nk {
	--tw-text-opacity: 1;
	color: rgba(234, 88, 12, var(--tw-text-opacity));
}
.ok {
	--tw-text-opacity: 1;
	color: rgba(5, 150, 105, var(--tw-text-opacity));
}
.pk {
	--tw-text-opacity: 1;
	color: rgba(220, 38, 38, var(--tw-text-opacity));
}
.qk {
	--tw-text-opacity: 1;
	color: rgba(219, 234, 254, var(--tw-text-opacity));
}
.rk {
	--tw-text-opacity: 1;
	color: rgba(255, 237, 213, var(--tw-text-opacity));
}
.sk {
	--tw-text-opacity: 1;
	color: rgba(209, 250, 229, var(--tw-text-opacity));
}
.tk {
	--tw-text-opacity: 1;
	color: rgba(237, 233, 254, var(--tw-text-opacity));
}
.uk {
	--tw-text-opacity: 1;
	color: rgba(124, 58, 237, var(--tw-text-opacity));
}
.vk {
	--tw-text-opacity: 1;
	color: rgba(254, 243, 199, var(--tw-text-opacity));
}
.wk {
	--tw-text-opacity: 1;
	color: rgba(245, 158, 11, var(--tw-text-opacity));
}
.xk {
	--tw-text-opacity: 1;
	color: rgba(255, 228, 230, var(--tw-text-opacity));
}
.yk {
	--tw-text-opacity: 1;
	color: rgba(225, 29, 72, var(--tw-text-opacity));
}
.zk {
	--tw-text-opacity: 1;
	color: rgba(236, 252, 203, var(--tw-text-opacity));
}
.al {
	--tw-text-opacity: 1;
	color: rgba(101, 163, 13, var(--tw-text-opacity));
}
.bl {
	--tw-text-opacity: 1;
	color: rgba(113, 113, 122, var(--tw-text-opacity));
}
.cl {
	--tw-text-opacity: 1;
	color: rgba(39, 39, 42, var(--tw-text-opacity));
}
.dl {
	--tw-text-opacity: 1;
	color: rgba(191, 219, 254, var(--tw-text-opacity));
}
.el::-moz-placeholder {
	--tw-placeholder-opacity: 1;
	color: rgba(113, 113, 122, var(--tw-placeholder-opacity));
}
.el:-ms-input-placeholder {
	--tw-placeholder-opacity: 1;
	color: rgba(113, 113, 122, var(--tw-placeholder-opacity));
}
.el::placeholder {
	--tw-placeholder-opacity: 1;
	color: rgba(113, 113, 122, var(--tw-placeholder-opacity));
}
.fl {
	caret-color: #4f46e5;
}
.gl {
	caret-color: #2563eb;
}
.hl {
	--tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.il {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.jl {
	--tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.kl {
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.ll {
	transition-duration: 200ms;
}
.ml:focus-within {
	--tw-text-opacity: 1;
	color: rgba(82, 82, 91, var(--tw-text-opacity));
}
.nl:hover {
	--tw-border-opacity: 1;
	border-color: rgba(37, 99, 235, var(--tw-border-opacity));
}
.ol:hover {
	--tw-border-opacity: 1;
	border-color: rgba(234, 88, 12, var(--tw-border-opacity));
}
.pl:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(29, 78, 216, var(--tw-bg-opacity));
}
.ql:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(67, 56, 202, var(--tw-bg-opacity));
}
.rl:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(251, 191, 36, var(--tw-bg-opacity));
}
.sl:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.tl:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.ul:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(250, 250, 250, var(--tw-bg-opacity));
}
.vl:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}
.wl:hover {
	--tw-bg-opacity: 1;
	background-color: rgba(234, 88, 12, var(--tw-bg-opacity));
}
.xl:hover {
	--tw-text-opacity: 1;
	color: rgba(0, 0, 0, var(--tw-text-opacity));
}
.yl:hover {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.zl:hover {
	--tw-text-opacity: 1;
	color: rgba(29, 78, 216, var(--tw-text-opacity));
}
.am:hover {
	--tw-text-opacity: 1;
	color: rgba(251, 191, 36, var(--tw-text-opacity));
}
.bm:hover {
	--tw-text-opacity: 1;
	color: rgba(37, 99, 235, var(--tw-text-opacity));
}
.cm:hover {
	--tw-text-opacity: 1;
	color: rgba(234, 88, 12, var(--tw-text-opacity));
}
.dm:hover {
	--tw-text-opacity: 0.8;
}
.em:hover {
	text-decoration: underline;
}
.fm:hover {
	opacity: 0.8;
}
.gm:hover {
	opacity: 0.9;
}
.hm:hover {
	--tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.im:focus {
	--tw-border-opacity: 1;
	border-color: rgba(79, 70, 229, var(--tw-border-opacity));
}
.jm:focus {
	--tw-border-opacity: 1;
	border-color: rgba(37, 99, 235, var(--tw-border-opacity));
}
.km:focus {
	border-color: transparent;
}
.lm:focus {
	--tw-border-opacity: 1;
	border-color: rgba(234, 88, 12, var(--tw-border-opacity));
}
.mm:focus {
	--tw-bg-opacity: 1;
	background-color: rgba(29, 78, 216, var(--tw-bg-opacity));
}
.nm:focus {
	--tw-bg-opacity: 1;
	background-color: rgba(67, 56, 202, var(--tw-bg-opacity));
}
.om:focus {
	--tw-bg-opacity: 1;
	background-color: rgba(251, 191, 36, var(--tw-bg-opacity));
}
.pm:focus {
	--tw-bg-opacity: 1;
	background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.qm:focus {
	--tw-bg-opacity: 1;
	background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}
.rm:focus {
	--tw-bg-opacity: 1;
	background-color: rgba(234, 88, 12, var(--tw-bg-opacity));
}
.sm:focus {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.tm:focus {
	--tw-text-opacity: 1;
	color: rgba(29, 78, 216, var(--tw-text-opacity));
}
.um:focus {
	--tw-text-opacity: 1;
	color: rgba(251, 191, 36, var(--tw-text-opacity));
}
.vm:focus {
	--tw-text-opacity: 1;
	color: rgba(37, 99, 235, var(--tw-text-opacity));
}
.wm:focus {
	--tw-text-opacity: 1;
	color: rgba(234, 88, 12, var(--tw-text-opacity));
}
.xm:focus {
	--tw-text-opacity: 0.8;
}
.ym:focus {
	opacity: 0.8;
}
.zm:focus {
	opacity: 0.9;
}
.an:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.bn:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.cn:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.dn:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(79, 70, 229, var(--tw-ring-opacity));
}
.en:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(37, 99, 235, var(--tw-ring-opacity));
}
@media (min-width: 640px) {

	.fn {
		margin-left: 1rem;
	}

	.gn {
		margin-top: 0px;
	}

	.hn {
		margin-left: 2rem;
	}

	.in {
		margin-top: 2.5rem;
	}

	.jn {
		margin-left: 0.5rem;
	}

	.kn {
		margin-top: 3rem;
	}

	.ln {
		margin-top: 4rem;
	}

	.mn {
		margin-top: 1.5rem;
	}

	.nn {
		margin-top: 5rem;
	}

	.on {
		display: flex;
	}

	.pn {
		height: 600px;
	}

	.qn {
		height: 3.5rem;
	}

	.rn {
		width: auto;
	}

	.sn {
		width: 600px;
	}

	.tn {
		width: 3.5rem;
	}

	.un {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.vn {
		grid-template-columns: repeat(3, minmax(0, 1fr));
	}

	.wn {
		flex-direction: row;
	}

	.xn {
		align-items: flex-start;
	}

	.yn {
		align-items: center;
	}

	.zn {
		align-items: baseline;
	}

	.ao {
		justify-content: flex-start;
	}

	.bo {
		justify-content: center;
	}

	.co {
		justify-content: space-between;
	}

	.do {
		gap: 3rem;
	}

	.eo > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(1rem * var(--tw-space-x-reverse));
		margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.fo > :not([hidden]) ~ :not([hidden]) {
		--tw-space-y-reverse: 0;
		margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
		margin-bottom: calc(0px * var(--tw-space-y-reverse));
	}

	.go > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(3rem * var(--tw-space-x-reverse));
		margin-left: calc(3rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.ho > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(1.5rem * var(--tw-space-x-reverse));
		margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.io > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(2rem * var(--tw-space-x-reverse));
		margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.jo {
		border-radius: 9999px;
	}

	.ko {
		border-top-right-radius: 0px;
		border-bottom-right-radius: 0px;
	}

	.lo {
		border-top-left-radius: 0px;
		border-bottom-left-radius: 0px;
	}

	.mo {
		border-width: 2px;
	}

	.no {
		border-color: transparent;
	}

	.oo {
		--tw-bg-opacity: 1;
		background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
	}

	.po {
		padding: 0.5rem;
	}

	.qo {
		padding: 1.5rem;
	}

	.ro {
		padding-top: 4rem;
		padding-bottom: 4rem;
	}

	.so {
		padding-left: 1.5rem;
		padding-right: 1.5rem;
	}

	.to {
		padding-left: 0px;
		padding-right: 0px;
	}

	.uo {
		padding-top: 1.5rem;
		padding-bottom: 1.5rem;
	}

	.vo {
		padding-top: 4rem;
	}

	.wo {
		padding-bottom: 1.5rem;
	}

	.xo {
		padding-left: 1.5rem;
	}

	.yo {
		padding-left: 2rem;
	}

	.zo {
		padding-right: 4rem;
	}

	.ap {
		padding-right: 0px;
	}

	.bp {
		text-align: left;
	}

	.cp {
		text-align: center;
	}

	.dp {
		font-size: 2.25rem;
		line-height: 2.5rem;
	}

	.ep {
		font-size: 1rem;
		line-height: 1.5rem;
	}

	.fp:focus-within {
		--tw-border-opacity: 1;
		border-color: rgba(37, 99, 235, var(--tw-border-opacity));
	}

	.gp:focus-within {
		--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
		--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
		box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
	}

	.hp:focus-within {
		--tw-ring-opacity: 1;
		--tw-ring-color: rgba(37, 99, 235, var(--tw-ring-opacity));
	}
}
@media (min-width: 768px) {

	.ip {
		position: absolute;
	}

	.jp {
		bottom: 0px;
	}

	.kp {
		order: 2;
	}

	.lp {
		order: 1;
	}

	.mp {
		order: 3;
	}

	.np {
		grid-column: span 3 / span 3;
	}

	.op {
		grid-column: span 1 / span 1;
	}

	.pp {
		grid-column: span 4 / span 4;
	}

	.qp {
		margin-top: 2.5rem;
	}

	.rp {
		margin-top: 4rem;
	}

	.sp {
		margin-top: 5rem;
	}

	.tp {
		margin-top: 0px;
	}

	.up {
		margin-top: 7rem;
	}

	.vp {
		display: block;
	}

	.wp {
		display: none;
	}

	.xp {
		width: 66.666667%;
	}

	.yp {
		width: auto;
	}

	.zp {
		transform-origin: top left;
	}

	.aq {
		transform-origin: bottom right;
	}

	.bq {
		--tw-scale-x: 1.5;
		--tw-scale-y: 1.5;
		transform: var(--tw-transform);
	}

	.cq {
		--tw-scale-x: 1.1;
		--tw-scale-y: 1.1;
		transform: var(--tw-transform);
	}

	.dq {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.eq {
		grid-template-columns: repeat(3, minmax(0, 1fr));
	}

	.fq {
		grid-template-columns: repeat(4, minmax(0, 1fr));
	}

	.gq {
		flex-direction: row;
	}

	.hq {
		justify-content: flex-start;
	}

	.iq {
		-moz-column-gap: 4rem;
		     column-gap: 4rem;
	}

	.jq {
		-moz-column-gap: 2rem;
		     column-gap: 2rem;
	}

	.kq {
		-moz-column-gap: 5rem;
		     column-gap: 5rem;
	}

	.lq {
		-moz-column-gap: 3rem;
		     column-gap: 3rem;
	}

	.mq > :not([hidden]) ~ :not([hidden]) {
		--tw-space-y-reverse: 0;
		margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
		margin-bottom: calc(0px * var(--tw-space-y-reverse));
	}

	.nq > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(1rem * var(--tw-space-x-reverse));
		margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.oq > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(5rem * var(--tw-space-x-reverse));
		margin-left: calc(5rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.pq {
		-o-object-position: left;
		   object-position: left;
	}

	.qq {
		padding-top: 4rem;
		padding-bottom: 4rem;
	}

	.rq {
		padding-left: 0px;
		padding-right: 0px;
	}

	.sq {
		padding-top: 0px;
	}

	.tq {
		padding-left: 0px;
	}

	.uq {
		text-align: left;
	}
}
@media (min-width: 1024px) {

	.vq {
		order: 2;
	}

	.wq {
		order: 1;
	}

	.xq {
		grid-column: span 2 / span 2;
	}

	.yq {
		grid-column: span 3 / span 3;
	}

	.zq {
		margin-top: 3rem;
	}

	.ar {
		margin-left: 4rem;
	}

	.br {
		margin-top: 0px;
	}

	.cr {
		margin-bottom: -18rem;
	}

	.dr {
		margin-bottom: -16rem;
	}

	.er {
		margin-top: 5rem;
	}

	.fr {
		margin-top: auto;
	}

	.gr {
		display: flex;
	}

	.hr {
		height: 5rem;
	}

	.ir {
		height: 2rem;
	}

	.jr {
		width: 50%;
	}

	.kr {
		width: 5rem;
	}

	.lr {
		width: 2rem;
	}

	.mr {
		max-width: 28rem;
	}

	.nr {
		max-width: 36rem;
	}

	.or {
		flex: 1 1 0%;
	}

	.pr {
		transform-origin: bottom right;
	}

	.qr {
		--tw-scale-x: .75;
		--tw-scale-y: .75;
		transform: var(--tw-transform);
	}

	.rr {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.sr {
		grid-template-columns: repeat(5, minmax(0, 1fr));
	}

	.tr {
		grid-template-columns: repeat(4, minmax(0, 1fr));
	}

	.ur {
		grid-template-columns: repeat(6, minmax(0, 1fr));
	}

	.vr {
		grid-template-columns: repeat(12, minmax(0, 1fr));
	}

	.wr {
		align-items: center;
	}

	.xr {
		justify-content: flex-end;
	}

	.yr {
		justify-content: space-between;
	}

	.zr {
		gap: 4rem;
	}

	.as {
		-moz-column-gap: 2rem;
		     column-gap: 2rem;
	}

	.bs {
		-moz-column-gap: 6rem;
		     column-gap: 6rem;
	}

	.cs {
		-moz-column-gap: 3rem;
		     column-gap: 3rem;
	}

	.ds {
		row-gap: 4rem;
	}

	.es > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(3rem * var(--tw-space-x-reverse));
		margin-left: calc(3rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.fs > :not([hidden]) ~ :not([hidden]) {
		--tw-space-y-reverse: 0;
		margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
		margin-bottom: calc(3rem * var(--tw-space-y-reverse));
	}

	.gs {
		padding: 4rem;
	}

	.hs {
		padding-top: 6rem;
		padding-bottom: 6rem;
	}

	.is {
		padding-left: 2rem;
		padding-right: 2rem;
	}

	.js {
		padding-top: 5rem;
		padding-bottom: 5rem;
	}

	.ks {
		padding-left: 0px;
		padding-right: 0px;
	}

	.ls {
		padding-left: 3rem;
		padding-right: 3rem;
	}

	.ms {
		padding-top: 2.5rem;
		padding-bottom: 2.5rem;
	}

	.ns {
		padding-top: 6rem;
	}

	.os {
		padding-right: 4rem;
	}

	.ps {
		padding-right: 2rem;
	}

	.qs {
		padding-left: 2rem;
	}

	.rs {
		text-align: left;
	}

	.ss {
		font-size: 3rem;
		line-height: 1;
	}

	.ts {
		line-height: 1.375;
	}

	.us {
		line-height: 1.25;
	}
}
@media (min-width: 1280px) {

	.vs {
		right: -3rem;
	}

	.ws {
		margin: 0px;
	}

	.xs {
		margin-left: 1.5rem;
	}

	.ys {
		margin-top: 0px;
	}

	.zs {
		display: block;
	}

	.at {
		display: flex;
	}

	.bt {
		height: 1.5rem;
	}

	.ct {
		width: 33.333333%;
	}

	.dt {
		width: 1px;
	}

	.et {
		align-items: center;
	}

	.ft {
		justify-content: flex-start;
	}

	.gt {
		justify-content: flex-end;
	}

	.ht {
		justify-content: space-between;
	}

	.it {
		-moz-column-gap: 4rem;
		     column-gap: 4rem;
	}

	.jt {
		row-gap: 1.5rem;
	}

	.kt {
		-moz-column-gap: 3rem;
		     column-gap: 3rem;
	}

	.lt > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(2rem * var(--tw-space-x-reverse));
		margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.mt {
		padding-top: 8rem;
		padding-bottom: 8rem;
	}

	.nt {
		padding-top: 6rem;
		padding-bottom: 6rem;
	}

	.ot {
		padding-left: 4rem;
		padding-right: 4rem;
	}

	.pt {
		padding-right: 0px;
	}

	.qt {
		padding-right: 6rem;
	}

	.rt {
		padding-right: 2rem;
	}

	.st {
		text-align: left;
	}
}
@media (min-width: 1536px) {

	.tt {
		margin-right: -6rem;
	}

	.ut {
		margin-top: -5rem;
	}

	.vt {
		margin-top: 8rem;
	}

	.wt {
		--tw-scale-x: 1;
		--tw-scale-y: 1;
		transform: var(--tw-transform);
	}

	.xt {
		-moz-column-gap: 5rem;
		     column-gap: 5rem;
	}

	.yt {
		border-radius: 0.75rem;
	}

	.zt {
		--tw-bg-opacity: 1;
		background-color: rgba(250, 250, 250, var(--tw-bg-opacity));
	}

	.au {
		--tw-bg-opacity: 1;
		background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
	}

	.bu {
		padding-top: 6rem;
		padding-bottom: 6rem;
	}

	.cu {
		padding-left: 6rem;
	}
}